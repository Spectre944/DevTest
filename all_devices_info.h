#ifndef ALL_DEVICES_INFO_H
#define ALL_DEVICES_INFO_H

#include <QObject>

class All_Devices_Info : public QObject
{
    Q_OBJECT

public:

    explicit All_Devices_Info(QObject *parent = nullptr);


    All_Devices_Info(const All_Devices_Info &obj);


    All_Devices_Info& operator= (const All_Devices_Info &obj);

///////////////////////////////////// СЕТТЕРЫ, ОБЩИЙ ГЕТТЕР И ОЧИСТКА ФЛАГОВ УГРОЗ, ОБРАБОТКИ //////////////////////////


    void set_radiation_danger_flag(bool);      // Устанавливаем ОБЩИЙ флаг радиационной угрозы (СВНГ-Т, СРХР-Т)

    bool get_radiation_danger_flag();          // Получаем ОБЩИЙ флаг радиационной угрозы (СВНГ-Т, СРХР-Т)

    void set_biology_danger_flag(bool);        // Устанавливаем ОБЩИЙ флаг биологической угрозы

    void set_chemistry_danger_flag(bool);      // Устанавливаем ОБЩИЙ флаг химической угрозы

    int  get_type_danger();                    // Выдаем общий тип угрозы (0 - угрозы нет, 1 - радиация, 2 - биология, 3 - химия ) (СВНГ-Т, СРХР-Т)

     void clear_all_danger_flags();            // Сбрасываем ОБЩИЕ флаги  угроз




////////////////////////////////////////////////////////////////////////////////////////////////////////////



///////////////////////////////////// СЕТТЕРЫ, ГЕТТЕРЫ И ОЧИСТКА ФЛАГОВ ОБРАБОТКИ ДАННЫХ ///////////////////


    void set_need_record_data(bool);              // Устанавливаем ОБЩИЙ Флаг необходимости записи данных в БД   (время или расстояние )

    bool get_need_record_data();                  // Получаем ОБЩИЙ Флаг необходимости записи данных в БД   (время или расстояние )

    void set_car_movement(bool);                  // Устанавливаем ОБЩИЙ  Флаг движения автомобиля (едет или стоит )

    bool get_car_movement();                      // Получаем ОБЩИЙ Флаг  Флаг движения автомобиля (едет или стоит )

    void clear_all_proc_flags();                  // Сбрасываем флаги обработки



////////////////////////////////////////////////////////////////////////////////////////////////////////////





///////////////////////////////////// СВНГ-Т НАЧАЛО /////////////////////////////////////////////////////////

    void  set_svng_value_arr(float, int);     // Значения в массив ПЕД СВНГ-Т записываем поэлементно, по позиции
    float get_svng_value_arr(int);            // Значения из массива ПЕД СВНГ-Т получаем поэлементно, по позиции

    void  set_svng_chance_data_arr(int, int); // Значения в массив стат.ошибок СВНГ-Т записываем поэлементно, по позиции
    int   get_svng_chance_data_arr(int);      // Значения из массива стат.ошибок СВНГ-Т получаем поэлементно, по позиции

    void  set_svng_high_sens_arr(bool, int);  // Значения в массив неисправностей высокочув. датчиков записываем поэлементно, по позиции
    bool  get_svng_high_sens_arr(int);        // Значения из массива неисправностей высокочув. датчиков получаем поэлементно, по позиции

    void  set_svng_low_sens_arr(bool, int);   // Значения в массив неисправностей низкочув. датчиков записываем поэлементно, по позиции
    bool  get_svng_low_sens_arr(int);         // Значения из массива неисправностей низкочув. датчиков получаем поэлементно, по позиции

    void set_svng_loss_connect_arr(bool, int);  // Значения в массив потери связи с датчиками записываем поэлементно, по позиции
    bool get_svng_loss_connect_arr(int);        // Значения из массива потери связи с датчиками получаем поэлементно, по позиции

    void set_svng_angle(int);                // Записываем значения угла радиационной угрозы
    int  get_svng_angle();                       // Получаем значения угла радиационной угрозы

    void set_err_open_svng_comport(bool);   // Геттер и сеттер флага ошибки открытия СОМ-порта
    bool get_err_open_svng_comport();

    void set_err_save_svng_comport(bool);   // Геттер и сеттер флага ошибки записи в СОМ-порт
    bool get_err_save_svng_comport();

    void set_err_crc_svng(bool);            // Геттер и сеттер флага ошибки CRC принятого пакета
    bool get_err_crc_svng();

    void set_err_size_pack_svng(bool);      // Геттер и сеттер флага ошибки размера принятого пакета
    bool get_err_size_pack_svng();

    void set_err_not_answ_svng(bool);       // Геттер и сеттер флага неответа прибора
    bool get_err_not_answ_svng();

    void set_err_general_svng(bool);  // Геттер и сеттер флага общей неисправности СВНГ-Т
    bool get_err_general_svng();

    void  svng_clear_all();              // Ф-ция очистки всех массивов СВНГ-Т



///////////////////////////////////// СВНГ-Т ОКОНЧАНИЕ /////////////////////////////////////////////////////



private:

///////////////////////////////////// ФЛАГИ УГРОЗ /////////////////////////////////////////////////////////

    bool radiationDanger;               // Радиационная угроза   - Общий флаг
    bool biologyDanger;                 // Биологическая угроза  - Общий флаг
    bool chemistryDanger;               // Химическая угроза     - Общий флаг

//////////////////////////////////////////////////////////////////////////////////////////////////////////////





///////////////////////////////////// ФЛАГИ ОБРАБОТКИ ДАННЫХ //////////////////////////////////////////////////////


    bool need_record_data;              // Флаг необходимости записи данных в БД   (время или расстояние )  - Общий флаг
    bool car_movement;                  // Флаг движения автомобиля (едет или стоит )                       - Общий флаг

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////




///////////////////////////////////// СВНГ-Т НАЧАЛО /////////////////////////////////////////////////////////

    int svng_angle;                   // Угол направления к источнику радиации

    float svng_value_arr[4];          // Массив ПЕД датчиков СВНГ-Т ( 0 - 3 )
    int   svng_chance_data[4];          // Массив стат. оценок измерений датчиков
    bool  svng_high_sens_arr[4];       // Массив флагов неисправностей высокочувствительных датчиков СВНГ-Т ( 0 - 3 )
    bool  svng_low_sens_arr[4];        // Массив флагов неисправностей низкочувствительных датчиков СВНГ-Т ( 0 - 3 )
    bool  svng_loss_connect_arr[4];    // Массив потери связи с детекторами



    bool errOpenSvngComPort;          // Флаг ошибки открытия СОМ-порта  -  флаги относятся к  информационному объекту
    bool errSaveSvngComPort;          // Флаг ошибки записи в СОМ-порт
    bool errCRCSvngComPort;           // Флаг ошибки CRC принятого пакета
    bool errSizePackSvng;             // Флаг ошибки размера принятого пакета
    bool errNotAnswerSvng;            // Флаг неответа прибора

    bool errGeneralSvng;              // Общий флаг неисправности СВНГ-Т


///////////////////////////////////// СВНГ-Т ОКОНЧАНИЕ /////////////////////////////////////////////////////






signals:

};



#endif // ALL_DEVICES_INFO_H
